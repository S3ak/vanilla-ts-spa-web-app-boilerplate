import HomePage from "../pages/HomePage";
import AboutPage from "../pages/AboutPage";
import NotFoundPage from "../pages/NotFoundPage";
import { lazyLoadImgs } from "../utils/lazy-load-img";
import { APP_CONTAINER_CLASSNAME } from "../constants";

const PATHS = {
  home: {
    url: "/",
    component: HomePage,
  },
  about: {
    url: "/about",
    component: AboutPage,
  },
} as const;

/**
 * Handles routing logic for the application by matching the current path to a route definition.
 *
 * @param currentPath - The current URL path to match against the route definitions.
 * @param routes - An object containing route definitions, where each route has a `url` and a `component`.
 * @param state - The current application state to be passed to the route's component.
 * @returns The HTML string generated by the matched route's component, or the NotFoundPage if no match is found.
 */
export default async function router(
  currentPath = "",
  routes = PATHS
): Promise<string> {
  // Find the matching route by path
  const currentRoute = Object.values(routes).find(
    (route) => route.url === currentPath
  );

  let html = await NotFoundPage();

  if (currentRoute) {
    html = await currentRoute.component();
  }

  return html;
}

/**
 * Renders the content for a given route path by updating the main content container.
 *
 * @param path - The optional route path to render. If not provided, uses the current window location pathname.
 * @returns A promise that resolves when the route content has been rendered and any post-render logic has executed.
 *
 * @remarks
 * - Updates the inner HTML of the main application container with the result of the router function.
 * - Executes any post-render logic (e.g., lazy loading images) after the content is rendered.
 * - If the path or content container is not available, the function exits early.
 */
export async function renderRoute(path?: string | undefined) {
  path = path ?? window.location.pathname;
  // Get the element where content will be rendered
  const contentContainer = document.getElementById(APP_CONTAINER_CLASSNAME);

  if (!path || !contentContainer) return;

  contentContainer.innerHTML = await router(path);

  // Run any code that needs DOM elements here after route render;
  lazyLoadImgs();
}
